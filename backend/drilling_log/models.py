from django.db import models
from django.contrib.auth.models import User


class Well(models.Model):
    """–î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –±—É—Ä–µ–Ω–∏–µ–º"""

    name = models.CharField(
        max_length=100, unique=True, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω—ã"
    )
    area = models.CharField(max_length=100, verbose_name="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—á–∞—Å—Ç–∫–∞")
    structure = models.CharField(
        max_length=100, blank=True, verbose_name="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ä—É–∂–µ–Ω–∏—è"
    )
    planned_depth = models.DecimalField(
        max_digits=6, decimal_places=2, default=0, verbose_name="–ü—Ä–æ–µ–∫—Ç–Ω–∞—è –≥–ª—É–±–∏–Ω–∞, –º"
    )
    start_date = models.DateField(
        null=True, blank=True, verbose_name="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –±—É—Ä–µ–Ω–∏—è"
    )
    geologist = models.CharField(
        max_length=100, verbose_name="–ì–µ–æ–ª–æ–≥", default="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–µ–æ–ª–æ–≥"
    )
    created_by = models.ForeignKey(
        User, on_delete=models.CASCADE, verbose_name="–°–æ–∑–¥–∞–ª"
    )
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "–°–∫–≤–∞–∂–∏–Ω–∞"
        verbose_name_plural = "–°–∫–≤–∞–∂–∏–Ω—ã"
        ordering = ["-created_at"]

    def __str__(self):
        return self.name


class GeologyLayer(models.Model):
    """–°–ª–æ–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—É—Ä–µ–Ω–∏—è"""

    LITHOLOGY_TYPES = (
        ("prs", "üü´ –ü–†–° (–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ-—Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ª–æ–π)"),
        ("peat", "üü§ –¢–æ—Ä—Ñ"),
        ("sand", "üü° –ü–µ—Å–æ–∫"),
        ("loam", "üîµ –°—É–≥–ª–∏–Ω–æ–∫"),
        ("sandy_loam", "üü† –°—É–ø–µ—Å—å"),
    )

    well = models.ForeignKey(
        Well, on_delete=models.CASCADE, related_name="layers", verbose_name="–°–∫–≤–∞–∂–∏–Ω–∞"
    )
    layer_number = models.IntegerField(default=1, verbose_name="–ù–æ–º–µ—Ä —Å–ª–æ—è")
    depth_from = models.DecimalField(
        max_digits=6, decimal_places=2, verbose_name="–ì–ª—É–±–∏–Ω–∞ –æ—Ç, –º"
    )
    depth_to = models.DecimalField(
        max_digits=6, decimal_places=2, verbose_name="–ì–ª—É–±–∏–Ω–∞ –¥–æ, –º"
    )
    lithology = models.CharField(
        max_length=20, choices=LITHOLOGY_TYPES, verbose_name="–õ–∏—Ç–æ–ª–æ–≥–∏—è"
    )
    description = models.TextField(blank=True, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        verbose_name = "–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–æ–π"
        verbose_name_plural = "–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–∏"
        ordering = ["depth_from"]

    def thickness(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –º–æ—â–Ω–æ—Å—Ç–∏ —Å–ª–æ—è"""
        if self.depth_from is not None and self.depth_to is not None:
            return float(self.depth_to) - float(self.depth_from)
        return 0.0

    thickness.short_description = "–ú–æ—â–Ω–æ—Å—Ç—å, –º"

    def __str__(self):
        return f"{self.well.name} - {self.depth_from}-{self.depth_to}–º - {self.get_lithology_display()}"
